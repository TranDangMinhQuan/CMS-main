# No SSL Configuration - Use if SSL issues persist
# Run with: mvn spring-boot:run -Dspring.profiles.active=nossl

# Database Configuration - Complete SSL bypass
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=CMS_system;encrypt=false;trustServerCertificate=true;integratedSecurity=false;authenticationScheme=nativeAuthentication;trustStore=;trustStorePassword=;hostNameInCertificate=;applicationIntent=readwrite

# Alternative options (uncomment if above doesn't work):

# Option A: Minimal SSL settings
# spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=CMS_system;trustServerCertificate=true

# Option B: Force disable encryption
# spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=CMS_system;encrypt=false

# Option C: Legacy compatibility
# spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=CMS_system;encrypt=false;trustServerCertificate=true;loginTimeout=30;socketTimeout=30

spring.datasource.username=sa
spring.datasource.password=your_password
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Force disable SSL validation
spring.jpa.properties.hibernate.connection.ssl=false

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# JWT Configuration
jwt.secret=mySecretKey
jwt.expiration=86400000

# CORS Configuration
cors.allowed-origins=http://localhost:3000